questions:
	Explain the difference between Relational Databases and SQL.

	relational databases are a form of database while sql is the query language that you use to look through that database

	Why do tables need a primary key?

	each row needs to have a unique value to differentiate it from the others, otherwise there would be way to access that row specifically

	What is the name given to a table column that references the primary key on another table.

	foreign key

	What do we need in order to have a many to many relationship between two tables.

	create a table to join the two, with it having 2 foreign keys to connect to the tables

dependancies and start up commands
Comands to run & steps to follow  
1. npm init -y
2. npm i express 
3. npm i -D nodemon
4. npm i sqlite3 
5. npm i knex
6. npm i knex-cleaner 
set up your data folder, set up your dbConfig.js get your knexfile set up make sure you add useNullAsDefault and add the pool and change your paths and database name
7. knex migrate:make <tablename> you can do this all in one or do one for each table (one for each table makes it easier to find where an error is)
8. set up your tables 
9. knex migrate: latest (this will create your db3 file to directory you set up in your knexfile)
10. then knex seed:make 01_<first table name> ect. 
11. after seed data has been added to seed files you can now run knex seed: run
12. set up your server and index.js 
13. set up your routes folder - add your start and server scripts to package.json
14. Create your models for each route
15. create your endpoints for each route (test as you go in postman or insomnia)


things I need for sprint

standup notes:
look at readme and make a db planner for it tonight. keep track of what we're setting up for the migrations

build api
it's just CR for the 3 tables

beware the one of the get endpoints needs a join function

whole project is 4 tables

stretch
did it in router. did find by id to get the project. then grabbed the 4 things our of the project that he wanted by destructuring it.

then mapped over item and returned the stuff that he needed. then did another call, find by project id and return by .then in that.

in his model, he joined up everything in his find by id.

could possibly make another model to do what you need.

run seeds in same order as migrations, otherwise you get forign key errors.

we should put the cleanup as well.

for delete, use truncate instead of del

we'll need 2 routes and models


questions for chris. how would we make it so projects and resources link up?

